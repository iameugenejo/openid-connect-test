{
  "name": "clean-obj",
  "description": "Clean objects recursively, deleting undefined [and null] properties of objects",
  "version": "0.1.2",
  "homepage": "http://github.com/ricardofbarros/clean-obj",
  "keywords": [
    "obj",
    "object",
    "clean",
    "sanitize",
    "null",
    "undefined",
    "safe"
  ],
  "author": {
    "name": "Ricardo Barros",
    "email": "ricardofbarros@hotmail.com"
  },
  "main": "./index.js",
  "bugs": {
    "url": "http://github.com/ricardofbarros/clean-obj/issues"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/ricardofbarros/clean-obj.git"
  },
  "engines": {
    "node": ">= 0.8"
  },
  "devDependencies": {
    "code": "^1.2.0",
    "mocha": "^2.0.1"
  },
  "readme": "clean-obj\n=========\n\nClean objects recursively, deleting undefined [and null] properties of objects\n\n\n## Installation\n\n```bash\n  npm i clean-obj --save\n```\n\n## Basic Usage\n\n`cleanObj(obj [,strict]);`\n\n## Non-Strict Mode\n\nThe usage is very simple, in the following example we are deleting all object properties that are `undefined`.\n\n```javascript\nvar cleanObj = require('clean-obj');\n\nvar obj = {\n  set: 'value',\n  undf: undefined,\n  nullz: null\n};\n\nobj = cleanObj(obj);\n\nconsole.log(obj);\n\n// Outputs { set: 'value', nullz: null }\n```\n\n## Strict Mode\n\nIf strict mode is set to true it will delete all object properties that are `null` and `undefined`.\n\n### Example\n\n```javascript\nvar cleanObj = require('clean-obj');\n\nvar obj = {\n  set: 'value',\n  undf: undefined,\n  nullz: null\n};\n\nobj = cleanObj(obj, true);\n\t\nconsole.log(obj);\n\n// Outputs { set: 'value' }\n```\n\n## How to run the tests?\n\nSimple, just run this in your terminal.\n\n```bash\nmake test\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "clean-obj@0.1.2",
  "_shasum": "4c29267e4238f40653e195131afd806207c4aac4",
  "_from": "clean-obj@*",
  "_resolved": "https://registry.npmjs.org/clean-obj/-/clean-obj-0.1.2.tgz"
}
